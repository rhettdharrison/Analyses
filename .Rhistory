library(vegan)
library(BIOMASS)
trees <- read.csv("Tree level data tk 4.csv",sep=",",header=T)
head(trees)
str(trees)
trees$HEIGHT[trees$STEM_NO>1] <- NA
library(vegan)
library(BIOMASS)
trees <- read.csv("Tree level data tk 4.csv",sep=",",header=T)
trees <- read.csv("Scripts/Tree level data tk 4.csv",sep=",",header=T)
trees <- read.csv("~/Scripts/Tree level data tk 4.csv",sep=",",header=T)
setwd("~/Documents/Projects/BMZ trees on farms Zambia/Analyses")
trees <- read.csv("/Data/Tree level data tk 4.csv",sep=",",header=T)
trees <- read.csv("Data/Tree level data tk 4.csv",sep=",",header=T)
head(trees)
str(trees)
trees$HEIGHT[trees$STEM_NO>1] <- NA
plots <- read.csv("Data/Plot_Level_Data Tk2.csv",sep=",",header=T)
head(plots)
str(plots)
plots <- plots[plots$PLOT_ID %in% unique(trees$PLOT_ID),]
dim(plots)
plots <- plots[order(plots$PLOT_ID),]
trees$BA <- pi*(trees$GBH/200)^2
plot_BA <- tapply(trees$BA,trees$PLOT_ID,sum)
#calculate plot BA per ha
plot_BA <- (plot_BA/(pi*plots$PLOT_SIZE^2))*10000
plot(log(plot_BA))
boxplot(plot_BA~droplevels(plots$RECLASSIFICATION),ylab="Basal Area")
png("Basal Area.png")
boxplot(plot_BA~droplevels(plots$RECLASSIFICATION),ylab="Basal Area")
dev.off()
#need to calculate biomass
head(trees)
trees$GENUS <- unlist(strsplit(as.character(trees$SPECIES)," "))[(1:length(trees$SPECIES))*2 - 1]
trees$SPP <- unlist(strsplit(as.character(trees$SPECIES)," "))[(seq(2,length(trees$SPECIES)*2,2))]
WSG <- getWoodDensity(trees$GENUS,trees$SPP)
head(WSG)
trees$PLANTS <- paste(trees$PLOT_ID,trees$PLANT_NO,sep="_")
DBH_sq <- tapply(trees$BA,trees$PLANTS,sum)/pi
AGB <- 0.0673*(WSG$meanWD[!(is.na(trees$HEIGHT))]*trees$HEIGHT[!(is.na(trees$HEIGHT))]*DBH_sq)^0.976
plot_AGB <- tapply(AGB,trees$PLOT_ID[!(is.na(trees$HEIGHT))],sum)
boxplot(plot_AGB~droplevels(plots$RECLASSIFICATION),ylab="Above Ground Biomass")
png("AGB.png")
boxplot(plot_AGB~droplevels(plots$RECLASSIFICATION),ylab="Above Ground Biomass")
dev.off()
levels(plots$RECLASSIFICATION)
levels(plots$CATEGORY)
## Classification accuracy
LUC_accuracy <- c(rep(NA,dim(plots[1])))
## Classification accuracy
LUC_accuracy <- c(rep(NA,dim(plots)[1]))
for(i in 1:dim(plots)[1]{
for(i in 1:dim(plots)[1]){
if(plots$RECLASSIFICATION==plots$CATEGORY){
LUC_accuracy[i] <-1
} else {
LUC_accuracy[i] <- 0
}
}
warning()
?match
for(i in 1:dim(plots)[1]){
if(pmatch(plots$RECLASSIFICATION,plots$CATEGORY)==1){
LUC_accuracy[i] <-1
} else {
LUC_accuracy[i] <- 0
}
}
LUC_accuracy
?match
## Classification accuracy
LUC_accuracy <- c(rep(NA,dim(plots)[1]))
for(i in 1:dim(plots)[1]){
if(all.equal(plots$RECLASSIFICATION,plots$CATEGORY)==1){
LUC_accuracy[i] <-1
} else {
LUC_accuracy[i] <- 0
}
}
head(plots)
## Classification accuracy
LUC_accuracy <- c(rep(NA,dim(plots)[1]))
for(i in 1:dim(plots)[1]){
if(match(plots$RECLASSIFICATION[i],plots$CATEGORY[i])==1){
LUC_accuracy[i] <-1
} else {
LUC_accuracy[i] <- 0
}
}
match(plots$RECLASSIFICATION[1],plots$CATEGORY[1])==1)
match(plots$RECLASSIFICATION[1],plots$CATEGORY[1])
match(plots$RECLASSIFICATION[2],plots$CATEGORY[2])
match(plots$RECLASSIFICATION[3],plots$CATEGORY[3])
## Classification accuracy
LUC_accuracy <- c(rep(NA,dim(plots)[1]))
for(i in 1:dim(plots)[1]){
if(charmatch(plots$RECLASSIFICATION[i],plots$CATEGORY[i])==1){
LUC_accuracy[i] <-1
} else {
LUC_accuracy[i] <- 0
}
}
charmatch(plots$RECLASSIFICATION[3],plots$CATEGORY[3])
## Classification accuracy
LUC_accuracy <- c(rep(NA,dim(plots)[1]))
for(i in 1:dim(plots)[1]){
LUC_accuracy[i] <-1
if(!(is.na(match(plots$RECLASSIFICATION[i],plots$CATEGORY[i]))){
LUC_accuracy[i] <-1
} else {
LUC_accuracy[i] <- 0
}
}
#Create community matrix
abundance <- matrix(unlist(tapply(trees$SPECIES,trees$PLOT_ID,table)),
nrow=length(unique(trees$PLOT_ID)),dimnames=list(unique(trees$PLOT_ID),unique(trees$SPECIES)))
range(diversity(abundance,index="simpson"))
range(diversity(abundance, index = "shannon"))
meta_plots <- metaMDS(abundance) #uses abundance data
meta_plots <- metaMDS(abundance, dist="jaccard") #presence absence
par(pty='s')
par(mar=c(8,8,0.5,0.5))
ordiplot(meta_plots,display="sites", type="none")
points(meta_plots$points[plotsII$CATEGORY=="Forest",1:2],col=2,pch=20, cex=3)
points(meta_plots$points[plotsII$CATEGORY!="Forest",1:2],col=4,pch=20, cex=3)
envfit(meta_plots,plots$CATEGORY)
## Classification accuracy
LUC_accuracy <- c(rep(NA,dim(plots)[1]))
for(i in 1:dim(plots)[1]){
if(!(is.na(match(plots$RECLASSIFICATION[i],plots$CATEGORY[i])))){
LUC_accuracy[i] <-1
} else {
LUC_accuracy[i] <- 0
}
}
head(plots)
LUC_accuracy_pr <- tapply(LUC_accuracy,plots$RECLASSIFICATION,sum)/table(plots$RECLASSIFICATION)
LUC_accuracy_pr
LUC_accuracy_pr <- cbind(LUC_accuracy_pr,sum(LUC_accuracy)/dim(plots)[1])
LUC_accuracy_pr <- tapply(LUC_accuracy,plots$RECLASSIFICATION,sum)/table(plots$RECLASSIFICATION)
LUC_accuracy_pr <- c(LUC_accuracy_pr,sum(LUC_accuracy)/dim(plots)[1])
names(LUC_accuracy_pr)
names(LUC_accuracy_pr)[5] <- "Total"
names(LUC_accuracy_pr)
barplot(LUC_accuracy_pr)
names(LUC_accuracy_pr) <- c("Crop","Forest","Grass","Wet","Total")
barplot(LUC_accuracy_pr)
barplot(LUC_accuracy_pr, ylab="Proportion correctly assigned")
barplot(LUC_accuracy_pr, ylab="Proportion of plots correctly assigned")
png("assign.png")
barplot(LUC_accuracy_pr, ylab="Proportion of plots correctly assigned")
dev.off()
#Create community matrix
trees_2 <- trees[trees$STEM_NO>1,]
abundance <- matrix(unlist(tapply(trees_2$SPECIES,trees_2$PLOT_ID,table)),
nrow=length(unique(trees_2$PLOT_ID)),dimnames=list(unique(trees_2$PLOT_ID),unique(trees_2$SPECIES)))
abundance <- matrix(unlist(tapply(trees$HEIGHT,list(trees_2$SPECIES,trees$PLOT_ID),function(x){sum(sign(x),na.rm=T}),
abundance <- matrix(unlist(tapply(trees$HEIGHT,list(trees_2$SPECIES,trees$PLOT_ID),function(x)sum(sign(x),na.rm=T),
range(diversity(abundance,index="simpson"))
abundance <- matrix(unlist(tapply(trees$HEIGHT,list(trees_2$SPECIES,trees$PLOT_ID),function(x)sum(sign(x),na.rm=T))),
nrow=length(unique(trees$PLOT_ID)),dimnames=list(unique(trees$PLOT_ID),unique(trees$SPECIES)))
abundance <- matrix(unlist(tapply(trees$HEIGHT,list(trees$SPECIES,trees$PLOT_ID),function(x)sum(sign(x),na.rm=T))),
nrow=length(unique(trees$PLOT_ID)),dimnames=list(unique(trees$PLOT_ID),unique(trees$SPECIES)))
length(unique(trees$SPECIES))
sign(NA)
sign(15)
?summaryByPlot
?sum
install.packages("spaa")
library(spaa)
head(trees_2)
#Create community matrix
trees_2 <- trees[trees$STEM_NO==1,]
head(trees_2)
#Create community matrix
trees_2 <- trees[trees$STEM_NO==1 && trees$ALIVE=="a",]
#Create community matrix
trees_2 <- trees[trees$STEM_NO==1,]
#Create community matrix
trees_2 <- trees[trees$STEM_NO==1 && charmatch(trees$ALIVE,"a"),]
#Create community matrix
trees_2 <- trees[trees$STEM_NO==1,]
trees_2 <- trees_2[!(is.na(match(trees_2$ALIVE,"a"))),]
abundance <- matrix(unlist(tapply(trees_2$SPECIES,trees_2$PLOT_ID,table)),
nrow=length(unique(trees_2$PLOT_ID)),dimnames=list(unique(trees_2$PLOT_ID),unique(trees_2$SPECIES)))
abundance <- matrix(unlist(tapply(trees_2$SPECIES,trees_2$PLOT_ID,table)))#,
length(unique(trees_2$SPECIES))
12408/131
length(unique(trees$PLOT_ID))
12408/94
unique(trees_2$SPECIES)
unique(trees_2$SPECIES)[order(trees_2$SPECIES)]
unique(trees_2$SPECIES)
levels(trees$SPECIES)
length(unique(trees_2$SPECIES))
abundance <- matrix(unlist(tapply(trees_2$SPECIES,trees_2$PLOT_ID,table)),
nrow=length(unique(trees_2$PLOT_ID)),dimnames=list(unique(trees_2$PLOT_ID),unique(trees_2$SPECIES)))
abundance <- matrix(unlist(tapply(trees_2$SPECIES,trees_2$PLOT_ID,table)),
nrow=length(unique(trees_2$PLOT_ID)),dimnames=list(unique(trees_2$PLOT_ID),levels(trees_2$SPECIES)))
range(diversity(abundance,index="simpson"))
range(diversity(abundance, index = "shannon"))
boxplot(diversity(abundance,index="simpson")~plots$RECLASSIFICATION)
boxplot(diversity(abundance,index="shannon")~plots$RECLASSIFICATION)
boxplot(diversity(abundance,index="shannon")~plots$RECLASSIFICATION, ylab="Shannon Diversity")
png("diversity.png")
boxplot(diversity(abundance,index="shannon")~plots$RECLASSIFICATION, ylab="Shannon Diversity")
dev.off()
meta_plots <- metaMDS(abundance) #uses abundance data
meta_plots <- metaMDS(abundance, dist="jaccard") #presence absence
vegdist(abundance)
barplot(apply(abundance,2,sum))
barplot(sort(apply(abundance,2,sum)))
barplot(sort(apply(abundance,2,sum)),decreasing=T)
?sort
barplot(sort(apply(abundance,2,sum),decreasing=T))
barplot(sort(apply(abundance,2,sum),decreasing=T),xlab="")
barplot(sort(apply(abundance,2,sum),decreasing=T),xlab="")
?barplot
barplot(sort(apply(abundance,2,sum),decreasing=T),names.arg = "")
barplot(sort(apply(abundance,2,sum),decreasing=T),names.arg = "",xlab="SPECIES",ylab="Abundance")
png("abundance.png")
barplot(sort(apply(abundance,2,sum),decreasing=T),names.arg = "",xlab="SPECIES",ylab="Abundance")
dev.off()
head(vegdist(abundance))
haed(abundance)
head(abundance)
barplot(sort(apply(abundance,1,sum),decreasing=T),names.arg = "",xlab="SPECIES",ylab="Abundance")
png("abundance.png")
barplot(sort(apply(abundance,2,sum),decreasing=T),names.arg = "",xlab="SPECIES",ylab="ABUNDANCE")
dev.off()
png("abundance by plot.png")
barplot(sort(apply(abundance,1,sum),decreasing=T),names.arg = "",xlab="PLOTS",ylab="ABUNDANCE")
dev.off()
head(trees)
dim(trees)
dim(trees_2)
ABG_sp <- tapply(AGB,trees$SPECIES,sum)
##metaMDS is not converging. Many plots are identical (which seems strange but I do not know the anaswer yet)
trees_2 <- trees[trees$STEM_NO==1,]
dim(trees_2)
trees_2 <- cbind(trees_2,AGB)
head(trees_2)
AGB_sp <- matrix(unlist(tapply(AGB,list(trees$PLOT_ID,trees_2$SPECIES),sum))
)
AGB_sp <- matrix(unlist(tapply(AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)))
boxplot(diversity(abundance,index="simpson")~plots$RECLASSIFICATION)
boxplot(diversity(abundance,index="shannon")~plots$RECLASSIFICATION, ylab="Shannon Diversity")
barplot(sort(apply(abundance,2,sum),decreasing=T),names.arg = "",xlab="SPECIES",ylab="ABUNDANCE")
barplot(sort(apply(abundance,1,sum),decreasing=T),names.arg = "",xlab="PLOTS",ylab="ABUNDANCE")
apply(sign(abundance),2,sum)
?frequency
head(trees_2)
species_list <- tapply(trees_2$STEM_NO),list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
species_list <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
head(species_list)
species_list[is.na(species_list),] <- 0
species_list[is.na(species_list)] <- 0
head(species_list)
abundance <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
abundance[is.na(species_list)] <- 0
boxplot(diversity(abundance,index="simpson")~plots$RECLASSIFICATION)
boxplot(diversity(abundance,index="shannon")~plots$RECLASSIFICATION, ylab="Shannon Diversity")
apply(sign(abundance),2,sum)
head(abundance)
abundance <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
abundance[is.na(abundance)] <- 0
head(abundance)
apply(sign(abundance),2,sum)
dim(abundance)
# remove species occuring in one plot
abundance[,apply(sign(abundance),2,sum)>1]
# remove species occuring in one plot
abundance <- abundance[,apply(sign(abundance),2,sum)>1]
dim(abundance)
abundance <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
abundance[is.na(abundance)] <- 0
dim(abundance)
boxplot(diversity(abundance,index="simpson")~plots$RECLASSIFICATION)
boxplot(diversity(abundance,index="simpson")~plots$RECLASSIFICATION,ylab="Simpson Diversity")
boxplot(diversity(abundance,index="shannon")~plots$RECLASSIFICATION, ylab="Shannon Diversity")
png("Outputs/diversity.png")
boxplot(diversity(abundance,index="shannon")~plots$RECLASSIFICATION, ylab="Shannon Diversity")
dev.off()
barplot(sort(apply(abundance,2,sum),decreasing=T),names.arg = "",xlab="SPECIES",ylab="ABUNDANCE")
png("Outputs/abundance.png")
barplot(sort(apply(abundance,2,sum),decreasing=T),names.arg = "",xlab="SPECIES",ylab="ABUNDANCE")
dev.off()
barplot(sort(apply(abundance,1,sum),decreasing=T),names.arg = "",xlab="PLOTS",ylab="ABUNDANCE")
# remove species occuring in one plot
abundance <- abundance[,apply(sign(abundance),2,sum)>1]
dim(abundance)
head(vegdist(abundance))
head(vegdist(droplevels(abundance)))
head(abundance)
abundance <- abundance[,apply(sign(abundance),1,sum)>0]
abundance <- abundance[apply(sign(abundance),1,sum)>0]
dim(abundance)
abundance <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
abundance[is.na(abundance)] <- 0
dim(abundance)
# remove species occuring in one plot
abundance <- abundance[apply(sign(abundance),2,sum)>1]
dim(abundance)
head(abundance)
abundance <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
abundance[is.na(abundance)] <- 0
dim(abundance)
# remove species occuring in one plot
abundance <- abundance[,apply(sign(abundance),2,sum)>1]
dim(abundance)
abundance <- abundance[apply(sign(abundance),1,sum)>0,]
dim(abundance)
head(vegdist(abundance))
meta_plots <- metaMDS(abundance) #uses abundance data
meta_plots <- metaMDS(abundance, dist="jaccard") #presence absence
trees_2 <- trees[trees$STEM_NO==1,]
dim(trees_2)
trees_2 <- cbind(trees_2,AGB)
Species_AGB <- tapply(trees_2$AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),function(x)round(sum(x)))
Species_AGB <- tapply(trees_2$AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),function(x)round(sum(x),na.rm=T))
Species_AGB <- tapply(trees_2$AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),function(x)round(sum(x,na.rm=T)))
head(Species_AGB)
head(trees_2)
Species_AGB <- tapply(trees_2$AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),sum(x,na.rm=T))
Species_AGB <- tapply(trees_2$AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),sum,na.rm=T)
head(Species_AGB)
Species_AGB[is.na(Species_AGB)] <- 0
species_AGB <- tapply(trees_2$AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),sum,na.rm=T)
species_AGB[is.na(species_AGB)] <- 0
# remove species occuring in one plot
species_AGB <- species_AGB[,apply(sign(abundance),2,sum)>1]
View(Species_AGB)
dim(species_AGB)
# remove species occuring in one plot
species_AGB <- species_AGB[,apply(sign(species_AGB),2,sum)>1]
dim(species_AGB)
species_AGB <- species_AGB[apply(sign(species_AGB),1,sum)>0,]
dim(species_AGB)
?vegdist
meta_plots <- metaMDS(species_AGB) #uses abundance data
meta_plots <- metaMDS(species_AGB,distance = "euclidean")
?metaMDS
meta_plots <- metaMDS(species_AGB,distance = "euclidean",try =40, trymax = 40)
meta_plots <- metaMDS(species_AGB,distance = "euclidean",try =40, trymax = 40, k = 3)
meta_plots <- metaMDS(species_AGB,distance = "euclidean",try =40, trymax = 40, k = 5)
meta_plots
#Create community matrix
trees_2 <- trees[trees$STEM_NO==1,]
trees_2 <- trees_2[!(is.na(match(trees_2$ALIVE,"a"))),]
abundance <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
abundance[is.na(abundance)] <- 0
dim(abundance)
# remove species occuring in one plot
abundance <- abundance[,apply(sign(abundance),2,sum)>1]
dim(abundance)
abundance <- abundance[apply(sign(abundance),1,sum)>0,]
dim(abundance)
meta_plots <- metaMDS(abundance, k=3, maxtry = 40) #uses abundance data
meta_plots <- metaMDS(abundance, k=3, try = 40) #uses abundance data
meta_plots_j <- metaMDS(abundance, dist="jaccard", k=3, try = 40) #presence absence
meta_plots_j <- metaMDS(abundance, dist="jaccard", k=4, try = 40) #presence absence
trees_2 <- trees[trees$STEM_NO==1,]
dim(trees_2)
trees_2 <- cbind(trees_2,AGB)
species_AGB <- tapply(trees_2$AGB,list(trees_2$PLOT_ID,trees_2$SPECIES),sum,na.rm=T)
species_AGB[is.na(species_AGB)] <- 0
# remove species occuring in one plot
species_AGB <- species_AGB[,apply(sign(species_AGB),2,sum)>1]
dim(species_AGB)
species_AGB <- species_AGB[apply(sign(species_AGB),1,sum)>0,]
dim(species_AGB)
meta_plots <- metaMDS(species_AGB,distance = "mahalanobis",try =40, k = 3)
meta_plots <- metaMDS(species_AGB,distance = "mahalanobis",try =40, k = 4)
meta_plots <- metaMDS(abundance, k=3, try = 40) #uses abundance data SOLUTION REACHED
meta_plots_j <- metaMDS(abundance, dist="jaccard", k=4, try = 40) #presence absence NO CONVERGENCE
meta_plots <- metaMDS(abundance, k=3, try = 40) #uses abundance data SOLUTION REACHED
meta_plots_AGB <- metaMDS(species_AGB,distance = "mahalanobis",try =40, k = 4) # NO CONVERGENCE
par(pty='s')
par(mar=c(8,8,0.5,0.5))
ordiplot(meta_plots,display="sites", type="none")
points(meta_plots$points[plots$RECLASSIFICATION=="Forest",1:2],col=2,pch=20, cex=3)
abundance <- tapply(trees_2$STEM_NO,list(trees_2$PLOT_ID,trees_2$SPECIES),sum)
abundance[is.na(abundance)] <- 0
dim(abundance)
# remove species occuring in one plot
abundance <- abundance[,apply(sign(abundance),2,sum)>1]
dim(abundance)
apply(sign(abundance),1,sum)
which(apply(sign(abundance),1,sum)==0)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Forest"],col=2,pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Forest",1,2],col=2,pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Forest",1:2],col=2,pch=20, cex=3)
ordiplot(meta_plots,display="sites", type="none")
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Forest",1:2],col="green",pch=20, cex=3)
ordiplot(meta_plots,display="sites", type="none")
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Forest",1:2],col="dark green",pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Cropland",1:2],col="yellow",pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Wetland",1:2],col="blue",pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Grassland",1:2],col="green",pch=20, cex=3)
png("Outputs/NMDS.png")
par(pty='s')
par(mar=c(8,8,0.5,0.5))
ordiplot(meta_plots,display="sites", type="none",)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Forest",1:2],col="dark green",pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Cropland",1:2],col="yellow",pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Wetland",1:2],col="blue",pch=20, cex=3)
points(meta_plots$points[plots$RECLASSIFICATION[-60]=="Grassland",1:2],col="green",pch=20, cex=3)
dev.off()
envfit(meta_plots,plots$RECLASSIFICATION)
envfit(meta_plots,plots$RECLASSIFICATION[-60])
?envfit
